{"mappings":"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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar startButton = document.querySelector(\".button\");\nvar gameScore = document.querySelector(\".game-score\");\nvar gameField = document.querySelector(\"tbody\");\nvar messageStart = document.querySelector(\".message-start\");\nvar messageWin = document.querySelector(\".message-win\");\nvar messageLose = document.querySelector(\".message-lose\");\nvar rulesButton = document.querySelector(\".rules\");\nvar rulesExitButton = document.querySelector(\".rules-exit\");\nvar rules = document.querySelector(\".rules-container\");\nvar rows = 4;\nvar columns = 4;\nvar score;\nvar field;\nvar moved;\nvar touchStartX;\nvar touchStartY;\nvar touchEndX;\nvar touchEndY;\nstartButton.addEventListener(\"click\", function() {\n    startGame();\n});\nfunction startGame() {\n    field = Array.from({\n        length: rows\n    }, function() {\n        return Array.from({\n            length: columns\n        }, function() {\n            return 0;\n        });\n    });\n    score = 0;\n    messageStart.classList.add(\"hidden\");\n    messageWin.classList.add(\"hidden\");\n    messageLose.classList.add(\"hidden\");\n    startButton.classList.replace(\"start\", \"restart\");\n    startButton.innerText = \"Restart\";\n    addRandomCell();\n    addRandomCell();\n}\nfunction addRandomCell() {\n    setTimeout(function() {\n        var availableCells = getAvailableCells();\n        if (availableCells.length === 0) return;\n        var randomCell = availableCells[Math.floor(Math.random() * availableCells.length)];\n        var value = Math.random() > 0.1 ? 2 : 4;\n        field[randomCell.row][randomCell.column] = value;\n        updateField();\n    }, 150);\n}\nfunction getAvailableCells() {\n    var availableCells = [];\n    for(var row = 0; row < rows; row++){\n        for(var column = 0; column < columns; column++)if (field[row][column] === 0) availableCells.push({\n            row: row,\n            column: column\n        });\n    }\n    return availableCells;\n}\nfunction updateField() {\n    gameField.innerHTML = \"\";\n    for(var row = 0; row < rows; row++){\n        var newRow = document.createElement(\"tr\");\n        for(var column = 0; column < columns; column++){\n            var value = field[row][column];\n            var newCell = document.createElement(\"td\");\n            newCell.textContent = value > 0 ? value : \"\";\n            newCell.classList.add(\"field-cell\");\n            if (value > 0) newCell.classList.add(\"field-cell--\".concat(value));\n            if (value === 2048) {\n                messageWin.classList.remove(\"hidden\");\n                startButton.classList.replace(\"restart\", \"start\");\n                startButton.innerText = \"Start\";\n            }\n            newRow.appendChild(newCell);\n        }\n        gameField.appendChild(newRow);\n    }\n    gameScore.textContent = score;\n    if (gameLose()) messageLose.classList.remove(\"hidden\");\n}\nfunction gameLose() {\n    if (getAvailableCells().length > 0) return false;\n    for(var row = 0; row < rows; row++)for(var cell = 0; cell < columns - 1; cell++){\n        if (field[row][cell] === field[row][cell + 1] || field[cell][row] === field[cell + 1][row]) return false;\n    }\n    return true;\n}\ndocument.addEventListener(\"keydown\", pressKeyDown);\nfunction pressKeyDown(e) {\n    moved = false;\n    switch(e.key){\n        case \"ArrowUp\":\n            moved = moveCellsUp();\n            break;\n        case \"ArrowDown\":\n            moved = moveCellsDown();\n            break;\n        case \"ArrowLeft\":\n            moved = moveCellsLeft();\n            break;\n        case \"ArrowRight\":\n            moved = moveCellsRight();\n            break;\n    }\n    if (moved) addRandomCell();\n}\nfunction moveCellsUp() {\n    moved = false;\n    for(var column = 0; column < columns; column++){\n        for(var row = 1; row < rows; row++)if (field[row][column] !== 0) {\n            var newRow = row;\n            while(newRow > 0 && field[newRow - 1][column] === 0)newRow--;\n            if (newRow !== row) {\n                field[newRow][column] = field[row][column];\n                field[row][column] = 0;\n                moved = true;\n            }\n            if (newRow > 0 && field[newRow - 1][column] === field[newRow][column]) {\n                field[newRow - 1][column] *= 2;\n                field[newRow][column] = 0;\n                score += field[newRow - 1][column];\n                moved = true;\n            }\n        }\n    }\n    updateField();\n    return moved;\n}\nfunction moveCellsDown() {\n    moved = false;\n    for(var column = 0; column < columns; column++){\n        for(var row = rows - 2; row >= 0; row--)if (field[row][column] !== 0) {\n            var newRow = row;\n            while(newRow < rows - 1 && field[newRow + 1][column] === 0)newRow++;\n            if (newRow !== row) {\n                field[newRow][column] = field[row][column];\n                field[row][column] = 0;\n                moved = true;\n            }\n            if (newRow < rows - 1 && field[newRow + 1][column] === field[newRow][column]) {\n                field[newRow + 1][column] *= 2;\n                field[newRow][column] = 0;\n                score += field[newRow + 1][column];\n                moved = true;\n            }\n        }\n    }\n    updateField();\n    return moved;\n}\nfunction moveCellsLeft() {\n    moved = false;\n    for(var row = 0; row < rows; row++){\n        for(var column = 1; column < columns; column++)if (field[row][column] !== 0) {\n            var newColumn = column;\n            while(newColumn > 0 && field[row][newColumn - 1] === 0)newColumn--;\n            if (newColumn !== column) {\n                field[row][newColumn] = field[row][column];\n                field[row][column] = 0;\n                moved = true;\n            }\n            if (newColumn > 0 && field[row][newColumn - 1] === field[row][newColumn]) {\n                field[row][newColumn - 1] *= 2;\n                field[row][newColumn] = 0;\n                score += field[row][newColumn - 1];\n                moved = true;\n            }\n        }\n    }\n    updateField();\n    return moved;\n}\nfunction moveCellsRight() {\n    moved = false;\n    for(var row = 0; row < rows; row++){\n        for(var column = columns - 2; column >= 0; column--)if (field[row][column] !== 0) {\n            var newColumn = column;\n            while(newColumn < columns - 1 && field[row][newColumn + 1] === 0)newColumn++;\n            if (newColumn !== column) {\n                field[row][newColumn] = field[row][column];\n                field[row][column] = 0;\n                moved = true;\n            }\n            if (newColumn < columns - 1 && field[row][newColumn + 1] === field[row][newColumn]) {\n                field[row][newColumn + 1] *= 2;\n                field[row][newColumn] = 0;\n                score += field[row][newColumn + 1];\n                moved = true;\n            }\n        }\n    }\n    updateField();\n    return moved;\n}\ndocument.addEventListener(\"touchstart\", function(e) {\n    touchStartX = e.touches[0].clientX;\n    touchStartY = e.touches[0].clientY;\n});\ndocument.addEventListener(\"touchend\", function(e) {\n    touchEndX = e.changedTouches[0].clientX;\n    touchEndY = e.changedTouches[0].clientY;\n    handleSwipe();\n});\nfunction handleSwipe() {\n    moved = false;\n    var swipeThreshold = 100;\n    var deltaX = touchEndX - touchStartX;\n    var deltaY = touchEndY - touchStartY;\n    if (Math.abs(deltaX) < swipeThreshold && Math.abs(deltaY) < swipeThreshold) return;\n    switch(true){\n        case Math.abs(deltaX) >= Math.abs(deltaY):\n            if (deltaX > 0) moved = moveCellsRight();\n            else moved = moveCellsLeft();\n            break;\n        default:\n            if (deltaY > 0) moved = moveCellsDown();\n            else moved = moveCellsUp();\n    }\n    if (moved) addRandomCell();\n    updateField();\n}\nrulesButton.addEventListener(\"click\", function() {\n    rules.classList.remove(\"visibility\");\n});\nrulesExitButton.addEventListener(\"click\", function() {\n    rules.classList.add(\"visibility\");\n});\n\n//# sourceMappingURL=index.e81d13fc.js.map\n","'use strict';\n\nconst startButton = document.querySelector('.button');\nconst gameScore = document.querySelector('.game-score');\nconst gameField = document.querySelector('tbody');\nconst messageStart = document.querySelector('.message-start');\nconst messageWin = document.querySelector('.message-win');\nconst messageLose = document.querySelector('.message-lose');\nconst rulesButton = document.querySelector('.rules');\nconst rulesExitButton = document.querySelector('.rules-exit');\nconst rules = document.querySelector('.rules-container');\n\nconst rows = 4;\nconst columns = 4;\nlet score;\nlet field;\nlet moved;\nlet touchStartX;\nlet touchStartY;\nlet touchEndX;\nlet touchEndY;\n\nstartButton.addEventListener('click', () => {\n  startGame();\n});\n\nfunction startGame() {\n  field = Array.from(\n    { length: rows }, () => Array.from({ length: columns }, () => 0)\n  );\n\n  score = 0;\n\n  messageStart.classList.add('hidden');\n  messageWin.classList.add('hidden');\n  messageLose.classList.add('hidden');\n  startButton.classList.replace('start', 'restart');\n  startButton.innerText = 'Restart';\n\n  addRandomCell();\n  addRandomCell();\n}\n\nfunction addRandomCell() {\n  setTimeout(() => {\n    const availableCells = getAvailableCells();\n\n    if (availableCells.length === 0) {\n      return;\n    }\n\n    const randomCell\n      = availableCells[Math.floor(Math.random() * availableCells.length)];\n    const value = Math.random() > 0.1 ? 2 : 4;\n\n    field[randomCell.row][randomCell.column] = value;\n\n    updateField();\n  }, 150);\n}\n\nfunction getAvailableCells() {\n  const availableCells = [];\n\n  for (let row = 0; row < rows; row++) {\n    for (let column = 0; column < columns; column++) {\n      if (field[row][column] === 0) {\n        availableCells.push({\n          row, column,\n        });\n      }\n    }\n  }\n\n  return availableCells;\n}\n\nfunction updateField() {\n  gameField.innerHTML = '';\n\n  for (let row = 0; row < rows; row++) {\n    const newRow = document.createElement('tr');\n\n    for (let column = 0; column < columns; column++) {\n      const value = field[row][column];\n      const newCell = document.createElement('td');\n\n      newCell.textContent = value > 0 ? value : '';\n      newCell.classList.add('field-cell');\n\n      if (value > 0) {\n        newCell.classList.add(`field-cell--${value}`);\n      }\n\n      if (value === 2048) {\n        messageWin.classList.remove('hidden');\n        startButton.classList.replace('restart', 'start');\n        startButton.innerText = 'Start';\n      }\n      newRow.appendChild(newCell);\n    }\n\n    gameField.appendChild(newRow);\n  }\n\n  gameScore.textContent = score;\n\n  if (gameLose()) {\n    messageLose.classList.remove('hidden');\n  }\n}\n\nfunction gameLose() {\n  if (getAvailableCells().length > 0) {\n    return false;\n  }\n\n  for (let row = 0; row < rows; row++) {\n    for (let cell = 0; cell < columns - 1; cell++) {\n      if (field[row][cell] === field[row][cell + 1]\n        || field[cell][row] === field[cell + 1][row]) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\ndocument.addEventListener('keydown', pressKeyDown);\n\nfunction pressKeyDown(e) {\n  moved = false;\n\n  switch (e.key) {\n    case 'ArrowUp':\n      moved = moveCellsUp();\n      break;\n    case 'ArrowDown':\n      moved = moveCellsDown();\n      break;\n    case 'ArrowLeft':\n      moved = moveCellsLeft();\n      break;\n    case 'ArrowRight':\n      moved = moveCellsRight();\n      break;\n  }\n\n  if (moved) {\n    addRandomCell();\n  }\n}\n\nfunction moveCellsUp() {\n  moved = false;\n\n  for (let column = 0; column < columns; column++) {\n    for (let row = 1; row < rows; row++) {\n      if (field[row][column] !== 0) {\n        let newRow = row;\n\n        while (newRow > 0 && field[newRow - 1][column] === 0) {\n          newRow--;\n        }\n\n        if (newRow !== row) {\n          field[newRow][column] = field[row][column];\n          field[row][column] = 0;\n          moved = true;\n        }\n\n        if (\n          newRow > 0 && field[newRow - 1][column] === field[newRow][column]\n        ) {\n          field[newRow - 1][column] *= 2;\n          field[newRow][column] = 0;\n          score += field[newRow - 1][column];\n          moved = true;\n        }\n      }\n    }\n  }\n\n  updateField();\n\n  return moved;\n}\n\nfunction moveCellsDown() {\n  moved = false;\n\n  for (let column = 0; column < columns; column++) {\n    for (let row = rows - 2; row >= 0; row--) {\n      if (field[row][column] !== 0) {\n        let newRow = row;\n\n        while (newRow < rows - 1 && field[newRow + 1][column] === 0) {\n          newRow++;\n        }\n\n        if (newRow !== row) {\n          field[newRow][column] = field[row][column];\n          field[row][column] = 0;\n          moved = true;\n        }\n\n        if (\n          newRow < rows - 1\n          && field[newRow + 1][column] === field[newRow][column]\n        ) {\n          field[newRow + 1][column] *= 2;\n          field[newRow][column] = 0;\n          score += field[newRow + 1][column];\n          moved = true;\n        }\n      }\n    }\n  }\n\n  updateField();\n\n  return moved;\n}\n\nfunction moveCellsLeft() {\n  moved = false;\n\n  for (let row = 0; row < rows; row++) {\n    for (let column = 1; column < columns; column++) {\n      if (field[row][column] !== 0) {\n        let newColumn = column;\n\n        while (newColumn > 0 && field[row][newColumn - 1] === 0) {\n          newColumn--;\n        }\n\n        if (newColumn !== column) {\n          field[row][newColumn] = field[row][column];\n          field[row][column] = 0;\n          moved = true;\n        }\n\n        if (\n          newColumn > 0 && field[row][newColumn - 1] === field[row][newColumn]\n        ) {\n          field[row][newColumn - 1] *= 2;\n          field[row][newColumn] = 0;\n          score += field[row][newColumn - 1];\n          moved = true;\n        }\n      }\n    }\n  }\n\n  updateField();\n\n  return moved;\n}\n\nfunction moveCellsRight() {\n  moved = false;\n\n  for (let row = 0; row < rows; row++) {\n    for (let column = columns - 2; column >= 0; column--) {\n      if (field[row][column] !== 0) {\n        let newColumn = column;\n\n        while (newColumn < columns - 1 && field[row][newColumn + 1] === 0) {\n          newColumn++;\n        }\n\n        if (newColumn !== column) {\n          field[row][newColumn] = field[row][column];\n          field[row][column] = 0;\n          moved = true;\n        }\n\n        if (\n          newColumn < columns - 1\n          && field[row][newColumn + 1] === field[row][newColumn]\n        ) {\n          field[row][newColumn + 1] *= 2;\n          field[row][newColumn] = 0;\n          score += field[row][newColumn + 1];\n          moved = true;\n        }\n      }\n    }\n  }\n\n  updateField();\n\n  return moved;\n}\n\ndocument.addEventListener('touchstart', (e) => {\n  touchStartX = e.touches[0].clientX;\n  touchStartY = e.touches[0].clientY;\n});\n\ndocument.addEventListener('touchend', (e) => {\n  touchEndX = e.changedTouches[0].clientX;\n  touchEndY = e.changedTouches[0].clientY;\n  handleSwipe();\n});\n\nfunction handleSwipe() {\n  moved = false;\n\n  const swipeThreshold = 100;\n\n  const deltaX = touchEndX - touchStartX;\n  const deltaY = touchEndY - touchStartY;\n\n  if (\n    Math.abs(deltaX) < swipeThreshold\n    && Math.abs(deltaY) < swipeThreshold\n  ) {\n    return;\n  }\n\n  switch (true) {\n    case Math.abs(deltaX) >= Math.abs(deltaY):\n      if (deltaX > 0) {\n        moved = moveCellsRight();\n      } else {\n        moved = moveCellsLeft();\n      }\n      break;\n\n    default:\n      if (deltaY > 0) {\n        moved = moveCellsDown();\n      } else {\n        moved = moveCellsUp();\n      }\n  }\n\n  if (moved) {\n    addRandomCell();\n  }\n\n  updateField();\n}\n\nrulesButton.addEventListener('click', () => {\n  rules.classList.remove('visibility');\n});\n\nrulesExitButton.addEventListener('click', () => {\n  rules.classList.add('visibility');\n});\n"],"names":["score","field","moved","touchStartX","touchStartY","touchEndX","touchEndY","startButton","document","querySelector","gameScore","gameField","messageStart","messageWin","messageLose","rulesButton","rulesExitButton","rules","addRandomCell","setTimeout","availableCells","getAvailableCells","length","randomCell","Math","floor","random","row","column","updateField","push","innerHTML","newRow","createElement","value","newCell","textContent","classList","add","concat","remove","replace","innerText","appendChild","gameLose","cell","columns","moveCellsUp","moveCellsDown","rows","moveCellsLeft","newColumn","moveCellsRight","addEventListener","Array","from","e","key","touches","clientX","clientY","deltaX","deltaY","changedTouches","abs"],"version":3,"file":"index.e81d13fc.js.map"}